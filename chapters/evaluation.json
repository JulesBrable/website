[
    {
        "element": "Utilisation de git basique",
        "level": "Indispensable ðŸ‘®",
        "project": "all"
    },
    {
        "element": "Utilisation de secret (pas push sur git)",
        "level": "Indispensable ðŸ‘®",
        "project": "all"
    },
    {
        "element": "reproductibilitÃ©",
        "level": "Indispensable ðŸ‘®",
        "project": "all"
    },
    {
        "element": "Recette pour une image Docker",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": "Dockerfile"
    },
    {
        "element": "Un fichier .gitignore",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": ".gitignore"
    },
    {
        "element": "ContrÃ´le des dÃ©pendances (requirements.txt ou environment.yaml)",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": "requirements.txt (ou environment.yaml)"
    },
    {
        "element": "README Ã  la racine du projet",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": "README.md"
    },
    {
        "element": "Une licence",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": "License"
    },
    {
        "element": "Scripts Python en conformitÃ© avec les bonnes pratiques de qualitÃ© et de structure",
        "level": "Indispensable ðŸ‘®",
        "project": "all",
        "file": "monproject",
        "subfiles": "preprocessing.py, generate_plots.py"
    },
    // structure du projet propre Ã  chaque output
    {
        "element": "Structure du projet lisible et conventionnelle (cf. cookiecutter)",
        "level": "Indispensable ðŸ‘®",
        "project": "Site web statique",
        "file": "index.qmd, _quarto.yaml"
    },
    {
        "element": "Structure du projet lisible et conventionnelle (cf. cookiecutter)",
        "level": "Indispensable ðŸ‘®",
        "project": "Publication reproductible",
        "file": "analysis",
        "subfiles": "report.qmd"
    },
    {
        "element": "Structure du projet lisible et conventionnelle (cf. cookiecutter)",
        "level": "Indispensable ðŸ‘®",
        "project": "API",
        "file": "monproject",
        "subfiles": "train.py, api.py"
    },
    {
        "element": "Structure du projet lisible et conventionnelle (cf. cookiecutter)",
        "level": "Indispensable ðŸ‘®",
        "project": "Application interactive",
        "file": "app",
        "subfiles": "main.py"
    },
    //
    {
        "element": "formatter (ruff/blake)",
        "level": "Bien ðŸ˜Ž",
        "project": "all"
    },
    {
        "element": "Note minimal linter",
        "level": "Bien ðŸ˜Ž",
        "project": "all"
    },
    {
        "element": "Travail collaboratif dans Git (issues, PRâ€¦)",
        "level": "Bien ðŸ˜Ž",
        "project": "all"
    },
    {
        "element": "Actions Github (build dâ€™image dockerfile, dÃ©ploiement de Site web statiquesâ€¦)",
        "level": "Bien ðŸ˜Ž",
        "project": "all",
        "file": ".github/workflows",
        "subfiles": "dockerfile.yaml, deploy.yaml"
    },
    {
        "element": "fichiers de configuration",
        "level": "Bien ðŸ˜Ž",
        "project": "all",
        "file": "configuration",
        "subfiles": "config.yaml"
    },
    {
        "element": "Utilisation de s3 (si stockage de donnÃ©es)",
        "level": "Bien ðŸ˜Ž",
        "project": "all"
    },
    {
        "element": "Versionning manuel des modeles ML (Mlflowâ€¦)",
        "level": "Bien ðŸ˜Ž",
        "project": "all"
    },
    {
        "element": "DÃ©ploiement sur Kubernetes",
        "level": "Bien ðŸ˜Ž",
        "project": "all",
        "file": "deployment",
        "subfiles": "deployment.yaml, service.yaml, ingress.yaml"
    },
    {
        "element": "Pre-commit",
        "level": "Excellent ðŸ¤©",
        "project": "all",
        "file": ".pre-commit-config.yaml"
    },
    {
        "element": "Automatisation du linter (pylint CI)",
        "level": "Excellent ðŸ¤©",
        "project": "all",
        "file": ".github/workflows",
        "subfiles": "lint.yaml"
    },
    {
        "element": "Vault",
        "level": "Excellent ðŸ¤©",
        "project": "all"
    },
    {
        "element": "Pipeline Argo CD",
        "level": "Excellent ðŸ¤©",
        "project": "all",
        "file": "argo",
        "subfiles": "pipeline.yaml"
    },
    {
        "element": "Tests (unitaires, fonctionnels...)",
        "level": "Excellent ðŸ¤©",
        "project": "all",
        "file": "tests",
        "subfiles": "test_fonction1.py, test_fonction2.py"
    },
]

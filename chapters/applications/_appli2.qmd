::: {.callout-tip}
## Application 2: rendre lisible le script

- Diagnostiquer et évaluer la qualité de `titanic.py` avec [`PyLint`](https://pylint.readthedocs.io/en/latest/). Regarder la note obtenue.
- Utiliser `black titanic.py --diff --color` pour observer les changements de forme que va induire l'utilisation du _formatter_ [`Black`](https://black.readthedocs.io/en/stable/). Cette étape n'applique pas les modifications, elle ne fait que vous les montrer.
- Appliquer le _formatter_ [`Black`](https://black.readthedocs.io/en/stable/)
- Réutiliser [`PyLint`](https://pylint.readthedocs.io/en/latest/) pour diagnostiquer l'amélioration de la qualité du script et le travail qui reste à faire. 
- Comme la majorité du travail restant est à consacrer aux imports:
    - Mettre tous les _imports_ ensemble en début de script
    - Retirer les _imports_ redondants en s'aidant des diagnostics de votre éditeur
    - Réordonner les _imports_ si [`PyLint`](https://pylint.readthedocs.io/en/latest/) vous indique de le faire
    - Corriger les dernières fautes formelles suggérées par [`PyLint`](https://pylint.readthedocs.io/en/latest/)
- Délimiter des parties dans votre code pour rendre sa structure plus lisible 

<!-----
Temps test Julien: 22mn
------>
:::

::: {.callout-caution collapse="true"}
## Checkpoint

```{.bash filename="terminal"}
git checkout appli2
```

![](/checkpoint.jpg){width=80% fig-align="center"}

:::
